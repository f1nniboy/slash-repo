#!/bin/sh -e

export LDFLAGS="${LDFLAGS} -static"

### Toybox

cd toybox

# The build script is not POSIX.
patch -p1 < POSIX.patch

# Very conveniently, we can evade GNU make.
./scripts/make.sh
PREFIX="$1/usr/bin" ./scripts/install.sh --symlink --force

# Set the 'suid' bit on the built binary.
chmod gu+s "$1/usr/bin/toybox"

# Install the license.
install -Dm755 LICENSE "$1/usr/share/LICENSES/toybox.license"



### Busybox
# Busybox is currently included with Toybox to include support
# for these broken or non-existent toys:
# less, sh, awk, loadkmap, setfont

cd -; cd busybox

patch -p1 < busybox-print-unicode.patch

# Move the configuration file.
mv -f .busybox-config .config

# Remove forced gcc/g++ usage.
sed -i -e "s#= g[c+][c+]#= ${CC}#g" Makefile
sed -i -e "s#\(\$(CROSS_COMPILE)\)gcc#\1${CC}#g" Makefile

# Ensure that busybox's build system is aware that 'cc' points to
# to clang rather than GCC.
sed -i "s&\(\$(CC),\)clang&\1${CC}&g" Makefile.flags

# Build Busybox.
gmake HOSTCC="${CC}"
gmake CONFIG_PREFIX="$1/usr" install

# Install the symlinks.
"$1/usr/bin/busybox" --list | while read -r name; do
	ln -s busybox "$1/usr/bin/${name}"
done
